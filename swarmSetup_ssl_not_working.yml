---
- name: Set up the initial swarm manager
  hosts: swarmManagers[0]
  become: true

  tasks:
    - name: Initialize the swarm
      command: docker swarm init

    - name: Retrieve worker token from swarm manager
      command: docker swarm join-token -q worker
      register: workerToken
    - debug: msg="Worker Token={{ workerToken.stdout }}"

    - name: Retrieve manager token from swarm manager
      command: docker swarm join-token -q manager
      register: managerToken
    - debug: msg="Manager Token={{ managerToken.stdout }}"

- name: Add the worker nodes to the swarm
  hosts: swarmNodes
  become: true

  tasks:
    - name: Join the worker node to the swarm
      command: docker swarm join --token {{ hostvars[groups['swarmManagers'][0]]['workerToken']['stdout'] }} {{ hostvars[groups['swarmManagers'][0]].ansible_default_ipv4.address }}:2377
      register: result
    - debug: msg="{{ result.stdout }}"

- name: Deploying Registry as a Service in the Swarm
  hosts: swarmManagers[0]
  become: yes

  tasks:
    - name: Create self-signed certificates
      command: >
        openssl req -x509 -nodes -subj '/CN={{ ansible_default_ipv4.address }}' -days 365
        -newkey rsa:4096 -sha256 -keyout /etc/ssl/private/server.key -out /etc/ssl/certs/server.crt
        creates=/etc/ssl/certs/server.crt 
        
    - name: Printing out the public key
      command: cat /etc/ssl/certs/server.crt
      register: server_crt
    - debug: msg="{{server_crt.stdout}}"

    - name: Creating folder for persistent Registry Service
      file:
        path: /mnt/registry-volume
        state: directory

    - name: Starting Registry service
      command: >
        docker service create --name registry --publish=5000:5000 \
        --constraint=node.role==manager \
        --mount=type=bind,src=/mnt/registry-volume,dst=/var/lib/registry
        --mount=type=bind,src=/etc/ssl,dst=/certs \
        -e REGISTRY_HTTP_ADDR=0.0.0.0:5000 \
        -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/certs/server.crt \
        -e REGISTRY_HTTP_TLS_KEY=/certs/private/server.key \
        registry:latest

- name: Sharing certificates with nodes
  hosts: all
  become: true

  tasks:
    - name: Create cert.d directory
      file:
        path: /etc/docker/certs.d/{{ hostvars[groups['swarmManagers'][0]].ansible_default_ipv4.address }}:5000
        state: directory

    - name: Writing stored cert into files
      copy: content="{{ hostvars[groups['swarmManagers'][0]]['server_crt']['stdout'] }}" dest=/etc/docker/certs.d/{{ hostvars[groups['swarmManagers'][0]].ansible_default_ipv4.address }}:5000/ca.cert

- name: Deploying Portainer.io as Service in the Swarm
  hosts: swarmManagers[0]
  become: true

  tasks:
    - name: Creating folder for persistent Portainer.io Service
      file:
        path: mkdir -p /mnt/portainer-volume
        state: directory
    
    - name: Starting Portainer.io service
      command: >
        docker service create \
        --name portainer \
        --publish 9000:9000 \
        --replicas=1 \
        --constraint 'node.role == manager' \
        --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \
        --mount type=bind,src=/mnt/portainer-volume,dst=/data \
        portainer/portainer -H unix:///var/run/docker.sock --no-auth
