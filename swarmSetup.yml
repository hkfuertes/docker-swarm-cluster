---
- name: Set up the initial swarm manager
  hosts: swarmManagers[0]
  become: true

  tasks:
    - name: Initialize the swarm
      command: docker swarm init

    - name: Retrieve worker token from swarm manager
      command: docker swarm join-token -q worker
      register: workerToken
    - debug: msg="Worker Token={{ workerToken.stdout }}"

    - name: Retrieve manager token from swarm manager
      command: docker swarm join-token -q manager
      register: managerToken
    - debug: msg="Manager Token={{ managerToken.stdout }}"

- name: Add the worker nodes to the swarm
  hosts: swarmNodes
  become: true

  tasks:
    - name: Join the worker node to the swarm
      command: docker swarm join --token {{ hostvars[groups['swarmManagers'][0]]['workerToken']['stdout'] }} {{ hostvars[groups['swarmManagers'][0]].ansible_default_ipv4.address }}:2377
      register: result
    - debug: msg="{{ result.stdout }}"

- name: Deploying Registry as a Service in the Swarm
  hosts: swarmManagers[0]
  become: yes

  tasks:
    - name: Creating folder for persistent Registry Service
      file:
        path: /mnt/registry-volume
        state: directory

    - name: Starting Registry service
      command: >
        docker service create --name registry --publish=5000:5000 \
        --constraint=node.role==manager \
        --mount=type=bind,src=/mnt/registry-volume,dst=/var/lib/registry \
        -e REGISTRY_HTTP_ADDR=0.0.0.0:5000 \
        registry:latest

- name: Adding master as insecure registry server
  hosts: all
  become: true
  tasks:
    - name: Adding insecure registry server into /etc/docker/daemon.json
      copy: 
        content: "{\n\t\"insecure-registries\": [ \"{{ hostvars[groups['swarmManagers'][0]].ansible_default_ipv4.address }}:5000\"]\n}"
        dest: /etc/docker/daemon.json

- name: Deploying Portainer.io as container master node
  hosts: swarmManagers[0]
  become: true

  tasks:
    - name: Creating folder for persistent Portainer.io Service
      file:
        path: mkdir -p /mnt/portainer-volume
        state: directory
    
    - name: Starting Portainer.io service
      command: >
        docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/portainer-volume:/data portainer/portainer -H unix:///var/run/docker.sock --no-auth
